import numpy as np
import matplotlib.pyplot as plt

# Data reading

f = open(r"C:\Users\Hidde\Documents\Aerospace Engineering Bachelor Year 3\Simulation, Verification and Validation\Do228_ULC1.txt", "r")
fil = f.readlines()
f.close()

g = open(r"C:\Users\Hidde\Documents\Aerospace Engineering Bachelor Year 3\Simulation, Verification and Validation\Do228_SLC1.txt", "r")
gil = g.readlines()
g.close()

h = open(r"C:\Users\Hidde\Documents\Aerospace Engineering Bachelor Year 3\Simulation, Verification and Validation\Do228-19.txt", "r")
hil = h.readlines()
h.close()



# Deflectiondata

Defdata = fil[19:6175]

Deflec = []
for line in Defdata:
    line = line.strip("\n")
    C = []
    line = line.split(" ")
    for lin in line:
        if lin != "":
            C.append(float(lin))
    Deflec.append(C)

Deflec = np.matrix(Deflec)

# Stressdata

Str1 = gil[23:6871]
Str2 = gil[6892:11172]
Str3 = gil[11193:18041]
Str4 = gil[18062:24910]
Strdata = Str1 + Str2 + Str3 + Str4



Stress = []
for line in Strdata:
    
    line = line.strip("\n")
    E = []
    line = line.split(" ")
    for lin in line:
        if lin != "":
            E.append(float(lin))
    Stress.append(E)

Stress = np.matrix(Stress)


            
            
    
# Locationdata

Nodedata = hil[9:6165]

Nodes = []
for line in Nodedata:
    line = line.strip("\n")
    L = []
    line = line.split(" ")
    for lin in line:
        if lin != "":
            lin = lin.strip(",")
            L.append(float(lin))
    Nodes.append(L)

Nodes = np.matrix(Nodes)

Eldata = hil[6166:12372]

Els = []
for line in Eldata:
    line = line.strip("\n")
    M = []
    line = line.split(" ")
    for lin in line:
        if lin != "":
            lin = lin.strip(",")
            M.append(float(lin))
    Els.append(M)

Els = np.matrix(Els)




# Deflection validation

dLE = [-0.028541223221858945, -0.029465145192191223, -0.03038870138112354, -0.03131190304774386, -0.03223418215670246, -0.033842832433852506, -0.03544187081475899, -0.037025079665947876, -0.0385862490130486, -0.0401191765675677, -0.0416176677535145, -0.043075535733873994, -0.04448660143692235, -0.0458446935823803, -0.04714364870740007, -0.04837731119238121, -0.049539533286611, -0.05062413916920063, -0.05155076065361228, -0.052385893860440666, -0.0529539890389842, -0.053425590338119104, -0.053730434267459354, -0.05394443913473069, -0.054071228784499076, -0.05411454608528589, -0.05407814134092922, -0.053965772291752326, -0.05378120411575163, -0.053528209429804144, -0.053210568290894406, -0.052832068197361005, -0.05239650409016269, -0.051907678354164, -0.051369400819440664, -0.050785488762604615, -0.05015976690814857, -0.04949606742981065, -0.04879822995195828, -0.04807010155099223, -0.04731553675677029, -0.046538397554050565, -0.04574255338395485, -0.0449318811454516, -0.0441102651968588, -0.04328159735736658, -0.042046569773834516, -0.04081168034213142, -0.03957717826185379, -0.03834305219088523]
xlist = np.linspace(0., 2691, 50)
dTE = [0.16779659799545388, 0.16691003265762103, 0.16602309271544266, 0.1651357667404323, 0.16424862260243786, 0.16405791884968512, 0.16387983728152322, 0.1637203197369151, 0.16358530058887744, 0.16348070677125462, 0.16341245780534405, 0.16338646582636937, 0.1634086356097957, 0.16348486459748326, 0.16362104292367416, 0.1638230534408082, 0.16409677174516335, 0.1644481021668408, 0.16480984455683287, 0.16526251093601954, 0.16564249643951362, 0.16611965706579104, 0.16661829027596398, 0.16720836229965536, 0.16788620140823246, 0.16864801659239276, 0.16949000915310075, 0.17040837270275655, 0.17139929316638397, 0.17245894878283768, 0.17358351010603046, 0.17476914000617938, 0.17601199367107223, 0.17730821860735296, 0.17865395464182715, 0.180045333922787, 0.18147848092135593, 0.18294951243285315, 0.18445453757817765, 0.18598965780521212, 0.18755096689024672, 0.18913455093942244, 0.1907364883901942, 0.19235285001281419, 0.19397969891183436, 0.1956130905276295, 0.19684588853751092, 0.19807929158121051, 0.19931305046581557, 0.20054717653678414]
dLE2 = list(np.array(dLE)*1000.)
dTE2 = list(np.array(dTE)*1000.)

xLElist = []
xTRlist = []
LElist = []
TRlist = []
for i in range(len(Nodes[:,0])):
    if Nodes[i, 2] == 0.:
        if Nodes[i,3] == -391.:
            xTRlist.append(Nodes[i,1])
            TRlist.append(Deflec[i, 7])
        elif Nodes[i,3] == 124.:
            xLElist.append(Nodes[i,1])
            LElist.append(Deflec[i, 7])
            
plt.grid(True)
plt.plot(xTRlist, TRlist, 'go', label='Validation data TE')
plt.plot(xlist, dTE2, 'ro', label='Simulation data TE')
#plt.show()
plt.xlabel('x [mm]')
plt.ylabel('Deflection [mm]')
plt.plot(xLElist, LElist, 'bo', label='Validation data LE')
plt.plot(xlist, dLE2, 'yo', label='Simulation data LE')
plt.legend(loc='best')
plt.show()


# Stress validation

Elocs = []
for i in range(len(Els[:,0])):
    x = 0
    y = 0
    z = 0
    locs = [Els[i,0]]
    for j in range(1,5):
        x = x + Nodes[Els[i,j]-1, 1]
        y = y + Nodes[Els[i,j]-1, 2]
        z = z + Nodes[Els[i,j]-1, 3]
    locs = locs + [x/4.,y/4.,z/4.]
    Elocs.append(locs)

Elocs = np.matrix(Elocs)

##Elstr = []
##for j in range(len(Els[:,0])):
##    lstr = 0.
##    for i in range(4*len(Els[:,0])):
##        if Stress[i,0] == Els[j,0]:
##            lstr = lstr + (Stress[i,2]+Stress[i,3])/2.
##    lstr = lstr/4.
##    strlst = [Els[j,0], lstr]
##    Elstr.append(strlst)
##    if j%10 == 0:
##        print j
##
##Elstr = np.matrix(Elstr)
##print Elstr
##
##XLES = []
##LES = []
##for i in range(len(Elocs[:,0])):
##    if Elocs[i,2] == 12.09560015:
##        XLES.append(Elocs[i,1])
##        LES.append(Elstr[i,1])
##        
##print XLES
##print LES

##XTRS = []
##TRS = []
##for i in range(len(Els[:,0])):
##    if Elocs[i,2] == 3.875:
##        XTRS.append(Elocs[i,1])
##        TRS.append(Elstr[i,1])
##
##print XTRS
##print TRS

XLES = [2499.3942850000003, 2474.1827350000003, 2448.9711900000002, 2423.7596450000001, 2398.5480950000001, 2373.3365450000001, 2348.125, 2322.9134549999999, 2297.7019049999999, 2272.4903549999999, 2247.2788099999998, 2222.0672649999997, 2196.8557149999997, 2171.6442850000003, 2146.4327350000003, 2121.2211900000002, 2096.0096450000001, 2070.7980950000001, 2045.5865449999999, 2020.375, 1995.163515, 1969.951965, 1944.740415, 1919.5288700000001, 1894.317325, 1869.105775, 1843.894225, 1818.682675, 1793.4711299999999, 1768.259585, 1743.048035, 1717.836485, 1692.625, 1667.413515, 1642.201965, 1616.990415, 1591.7788700000001, 1566.567325, 1541.355775, 1516.144225, 1490.932675, 1465.7211299999999, 1440.509585, 1415.298035, 1390.086485, 1364.875, 1339.663515, 1314.451965, 1289.240415, 1264.0288700000001, 1238.817325, 1213.605775, 2524.7857650000001, 2550.3571750000001, 2575.92859, 2601.5, 2627.07141, 2652.6428249999999, 2678.2142349999999, 1038.5, 1013.5, 988.5, 963.5, 938.5, 913.5, 888.46551499999987, 863.3965455, 838.32757600000002, 813.2586060000001, 788.18963599999995, 763.12066649999997, 738.05169699999988, 712.98275750000005, 687.91381799999999, 662.84484850000001, 637.77587900000003, 612.706909, 587.63793950000002, 562.56897000000004, 537.5, 512.43102999999996, 487.36206049999998, 462.293091, 437.22413649999999, 412.15518200000002, 387.08621200000005, 362.01724250000007, 336.94827300000003, 311.87930299999999, 286.81033300000001, 261.74137100000002, 236.67240899999999, 211.60344700000002, 186.53448500000002, 1188.5, 1163.5, 1138.5, 1113.5, 1088.5, 1063.5, 161.5714265, 136.71428299999999, 111.8571433, 87.0, 62.142856599999995, 37.285715100000004, 12.428571700000001]
LES =[0.031119737500000001, 0.041642600000000002, 0.041649600000000002, 0.041779199999999996, 0.042565174999999997, 0.043139400000000001, 0.043280562500000001, 0.043389575, 0.043511012500000001, 0.043617337499999999, 0.043696949999999998, 0.044048012500000004, 0.044027800000000006, 0.043743650000000009, 0.044189674999999998, 0.0446672875, 0.045002787500000002, 0.045387350000000007, 0.04562455, 0.045911074999999996, 0.046102024999999991, 0.046216524999999994, 0.046769775, 0.046659800000000001, 0.04615035, 0.046966512500000002, 0.047831737500000006, 0.048393850000000002, 0.049001225000000002, 0.049344712499999999, 0.049728424999999993, 0.049925712500000004, 0.049990850000000003, 0.050642162500000004, 0.050351837500000003, 0.0495969375, 0.050836062500000001, 0.052145674999999996, 0.052835087500000003, 0.053469124999999992, 0.053825937499999997, 0.054045650000000001, 0.054082999999999992, 0.054797075000000001, 0.054346387499999996, 0.053173262499999999, 0.054357074999999991, 0.055483887500000009, 0.05577, 0.056990487500000006, 0.056817724999999999, 0.060467574999999996, 0.010502040499999999, 0.000247896, 0.00024813, 0.00024720712499999998, 0.00024729950000000004, 0.000246858875, 0.00024579099999999998, 0.072043412500000001, 0.079975312499999993, 0.080302250000000006, 0.078932537499999997, 0.078846374999999996, 0.077369425000000006, 0.074612587499999994, 0.0743912875, 0.0745399125, 0.073540737500000009, 0.073537837500000008, 0.074983262499999995, 0.075270324999999999, 0.074555924999999995, 0.074517, 0.074359524999999996, 0.074128762500000001, 0.073682187499999996, 0.073314075000000006, 0.072622812499999995, 0.071810887500000004, 0.072282650000000004, 0.072405662499999995, 0.071881174999999992, 0.071812849999999998, 0.071700312500000002, 0.071532512500000006, 0.071429300000000001, 0.071296349999999994, 0.071104137499999998, 0.070059750000000004, 0.068542875000000003, 0.068232650000000006, 0.068238762499999994, 0.050961800000000002, 0.070211649999999987, 0.074648312499999994, 0.074939549999999994, 0.074060487499999994, 0.066967212499999998, 0.063514025000000002, 0.017093798125000004, 0.00024748437500000004, 0.00024777025, 0.000246858875, 0.00024693725, 0.00024649900000000001, 0.00024542587500000004]

XTRS = [2524.7857650000001, 2550.3571750000001, 2575.92859, 2601.5, 2627.07141, 2652.6428249999999, 2678.2142349999999, 2499.3942850000003, 2474.1827350000003, 2448.9711900000002, 2423.7596450000001, 2398.5480950000001, 2373.3365450000001, 2348.125, 2322.9134549999999, 2297.7019049999999, 2272.4903549999999, 2247.2788099999998, 2222.0672649999997, 2196.8557149999997, 2171.6442850000003, 2146.4327350000003, 2121.2211900000002, 2096.0096450000001, 2070.7980950000001, 2045.5865449999999, 2020.375, 1995.163515, 1969.951965, 1944.740415, 1919.5288700000001, 1894.317325, 1869.105775, 1843.894225, 1818.682675, 1793.4711299999999, 1768.259585, 1743.048035, 1717.836485, 1692.625, 1667.413515, 1642.201965, 1616.990415, 1591.7788700000001, 1566.567325, 1541.355775, 1516.144225, 1490.932675, 1465.7211299999999, 1440.509585, 1415.298035, 1390.086485, 1364.875, 1339.663515, 1314.451965, 1289.240415, 1264.0288700000001, 1238.817325, 1213.605775, 1188.5, 1163.5, 1138.5, 1113.5, 1088.5, 1063.5, 888.46551499999987, 863.3965455, 838.32757600000002, 813.2586060000001, 788.18963599999995, 763.12066649999997, 738.05169699999988, 712.98275750000005, 687.91381799999999, 662.84484850000001, 637.77587900000003, 612.706909, 587.63793950000002, 562.56897000000004, 537.5, 512.43102999999996, 487.36206049999998, 462.293091, 437.22413649999999, 412.15518200000002, 387.08621200000005, 362.01724250000007, 336.94827300000003, 311.87930299999999, 286.81033300000001, 261.74137100000002, 236.67240899999999, 211.60344700000002, 1038.5, 1013.5, 988.5, 963.5, 938.5, 913.5, 136.71428299999999, 111.8571433, 87.0, 62.142856599999995, 37.285715100000004, 12.428571700000001]
TRS = [0.0037456601500000003, 8.2742174999999994e-05, 8.6089900000000004e-05, 8.9446812500000003e-05, 9.3482450000000001e-05, 9.768537499999999e-05, 9.9405962500000004e-05, 0.011031240000000001, 0.014494187500000002, 0.014162237500000001, 0.015846425000000001, 0.01948565, 0.020560462500000001, 0.0190654125, 0.017697512500000002, 0.016472750000000001, 0.01524375, 0.014020399999999999, 0.012805024999999999, 0.011707987499999999, 0.015433262499999999, 0.023861787500000002, 0.026683750000000003, 0.023835775, 0.021184224999999998, 0.0187943125, 0.016418337500000001, 0.014063787500000001, 0.011626035, 0.0091380000000000003, 0.0068232462499999997, 0.013005906249999999, 0.027325087500000001, 0.032337524999999999, 0.0280239875, 0.0239652375, 0.0202817, 0.016662150000000001, 0.013110915000000001, 0.0095323462500000004, 0.0064792637500000003, 0.0051458512499999998, 0.014155468750000001, 0.031043424999999999, 0.036037612500000003, 0.030110600000000001, 0.024411124999999999, 0.019161187499999999, 0.014044201250000003, 0.009298685000000001, 0.00680478625, 0.0081626350000000014, 0.0161759325, 0.026986437500000002, 0.027548112499999999, 0.019672499999999999, 0.01266951625, 0.0088210124999999993, 0.0097578700000000001, 0.0123407025, 0.014441741250000001, 0.021093025000000001, 0.032985199999999999, 0.038142787499999997, 0.030385537499999997, 0.025451087499999997, 0.022771712499999999, 0.029520399999999999, 0.028534612500000001, 0.0187964625, 0.014800199999999999, 0.017838162500000001, 0.0214778625, 0.025272362499999999, 0.0292113375, 0.033215712500000001, 0.037691000000000002, 0.042680112499999999, 0.038052950000000002, 0.0238445875, 0.018014325000000001, 0.020347799999999999, 0.0224502125, 0.024443187500000001, 0.026275537499999998, 0.028098199999999997, 0.029861212500000001, 0.0318747375, 0.034132262500000003, 0.031530200000000001, 0.02423465, 0.021042249999999998, 0.021669012499999994, 0.022286674999999999, 0.021274737500000002, 0.024415899999999997, 0.030619750000000005, 0.038527587500000002, 0.037009162499999998, 8.2696112500000007e-05, 8.5864000000000003e-05, 8.9043700000000003e-05, 9.2922400000000003e-05, 9.694663749999999e-05, 9.8543262500000003e-05]

VMLE = [0.0292266638151209, 0.02873544719484545, 0.028244230574569977, 0.027753013954294515, 0.9796207855367778, 0.9791295689165022, 0.9786383522962263, 0.9781471356759512, 0.977655919055676, 0.9771647024354001, 0.9766734858151246, 0.976182269194849, 0.9756910525745738, 0.9751998359542985, 0.9747086193340226, 0.9742174027137478, 0.9737261860934722, 0.8655069394896331, 0.8650157228693577, 0.8645245062490821, 0.6177653311785276, 0.618256547798803, 0.5120204325540886, 0.5125116491743642, 0.5130028657946398, 0.513494082414915, 0.5139852990351905, 0.5144765156554659, 0.5149677322757414, 0.515458948896017, 0.5159501655162922, 0.5164413821365679, 0.5169325987568435, 0.5174238153771189, 0.5179150319973943, 0.51840624861767, 0.5188974652379452, 0.5193886818582208, 0.519879898478496, 0.5203711150987715, 0.5208623317190472, 0.5213535483393225, 0.5218447649595982, 0.5223359815798735, 0.5228271982001489, 0.5233184148204244, 0.030700313675947107, 0.030209097055671638, 0.029717880435396173, 0.029226663815120745]
VMTE = [0.06314485145554449, 0.06173631522288019, 0.060327778990215845, 0.05891924275755152, 2.6013746438405216, 2.5999661076078575, 2.598557571375193, 2.5971490351425297, 2.5957404989098647, 2.5943319626771997, 2.5929234264445356, 2.591514890211871, 2.5901063539792073, 2.5886978177465436, 2.5872892815138786, 2.5858807452812154, 2.5844722090485504, 2.333026825720719, 2.331618289488054, 2.3302097532553905, 1.6335451599203603, 1.6349536961530244, 1.3886480064551383, 1.3900565426878029, 1.3914650789204672, 1.3928736151531316, 1.3942821513857957, 1.3956906876184596, 1.3970992238511244, 1.3985077600837883, 1.3999162963164526, 1.4013248325491177, 1.4027333687817813, 1.4041419050144457, 1.4055504412471103, 1.4069589774797746, 1.4083675137124387, 1.409776049945103, 1.4111845861777672, 1.4125931224104318, 1.4140016586430961, 1.4154101948757605, 1.416818731108425, 1.4182272673410894, 1.4196358035737533, 1.421044339806418, 0.0673704601535369, 0.06596192392087258, 0.06455338768820824, 0.06314485145554403]
xlist = np.linspace(0., 2691., 50)
LES2 = list(np.array(LES)*1000.)
TRS2 = list(np.array(TRS)*1000.)
VMLE2 = list(np.array(VMLE)*100.)
VMTE2 = list(np.array(VMTE)*100.)
plt.grid(True)
plt.xlabel('x [mm]')
plt.ylabel('Von Mises stress [MPa]')
plt.plot(XLES, LES2, 'bo', label='Validation data LE')
plt.plot(xlist, VMLE2, 'ro', label='Simulation data LE')
plt.legend(loc='best')
plt.show()
plt.grid(True)
plt.xlabel('x [mm]')
plt.ylabel('Von Mises stress [MPa]')
plt.plot(XTRS, TRS2, 'bo', label='Validation data TE')
plt.plot(xlist, VMTE2, 'ro', label='Simulation data TE')
plt.legend(loc='best')
plt.show()
        




